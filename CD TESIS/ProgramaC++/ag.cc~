#include <stdlib.h>
#include <unistd.h>
#include <iostream>
# define MAX 100

using namespace std;

void llenar1(int crom1[MAX], int t)
{
   for(int k=0;k< t;k++) 
  {
    crom1[k] = rand() % 2;
  }
}
void llenar2(int crom2[MAX], int t)
{
   for(int k=0;k< t;k++) 
  {
    crom2[k] = rand() % 2;
  }
}
void cross(int crom1[MAX],int crom2[MAX],int hijo1[MAX],int hijo2[MAX], int t)
{
   int i,k;
   i = rand()%9 + 1;
   for(k=0;k<i;k++)
   {
      hijo1[k]=crom1[k];
      hijo2[k]=crom2[k];
   }
   for(k=i;k<t;k++)
   {
       hijo1[k]=crom2[k];
       hijo2[k]=crom1[k];
   }
} 
void mutate(int hijo[MAX], int t)
{ 
  int i,j;
    for(j=0;j<3;j++)
    {
       i = rand() % t;
       hijo[i] = rand() % 2; 
   }
}

void copiar1(int crom1[MAX],int hijo1[MAX], int t)
{
  for(int i=0;i < t;i++)
  {
     crom1[i] = hijo1[i];   
  } 
}

void copiar2(int crom2[MAX],int hijo2[MAX], int t)
{
   for(int i=0;i < t;i++)
  {
     crom2[i] = hijo2[i];   
  } 
}

int fitness(int hijo1[MAX],int hijo2[MAX], int t)//sta se debe redifinir para resolver AX=b
{
  int p1=0,p2=0;
  for(int i=0;i < t;i++)
  {
     p1 =p1*p1 + hijo1[i]*hijo1[i];
     p2 =p2*p2 + hijo2[i]*hijo2[i];   
  } 
  if(p1 > p2)
      return 1;
  else
      return 2; 
}

void nueva_pob(int new_crom[MAX],int hijo[MAX], int t)
{
     for(int i=0;i < t;i++)
  {
     new_crom[i] = hijo[i];   
  } 
}
void mostrar(int new_crom[MAX], int t)
{
 for(int i=0;i < t;i++)
  {
     cout<<new_crom[i]<<" ";   
  } 
}

int main(int argc, char *argv[]) 
{
  int n, k=0, t ;// n es el num de generaciones a tener, k es cont de generaciones, t es el tam de la pob
  int crom1[MAX],crom2[MAX],hijo1[MAX],hijo2[MAX],new_crom[MAX],f;
  if (argc == 3)
  {
     n = atoi(argv[1]);
     t = atoi(argv[2]);
     llenar1(crom1,t); //llenar cromosoma1 con 0 y 1
     llenar2(crom2,t); //llenar cromosoma2 con 0 y 1

     while(k <= n) //cond de termino
     {
         cross(crom1,crom2,hijo1,hijo2,t);//cruce
         mutate(hijo1,t); //mutacion
         mutate(hijo2,t);
         copiar1(crom1,hijo1,t);
         copiar2(crom2,hijo2,t);
         f=fitness(hijo1,hijo2,t);//evaluacion
                 
         if(f == 1)  //seleccion
             nueva_pob(new_crom,hijo1,t);
         else
             nueva_pob(new_crom,hijo2,t);
         k=k++;
     }
      mostrar(new_crom,t);
  }
  else
    cout<<"ingrese los parametros validos \n";
}

